{"version":3,"file":"@emailjs_browser.js","names":["navigator"],"sources":["../../@emailjs/browser/es/models/EmailJSResponseStatus.js","../../@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../../@emailjs/browser/es/store/store.js","../../@emailjs/browser/es/utils/buildOptions/buildOptions.js","../../@emailjs/browser/es/methods/init/init.js","../../@emailjs/browser/es/api/sendPost.js","../../@emailjs/browser/es/utils/validateParams/validateParams.js","../../@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","../../@emailjs/browser/es/utils/isHeadless/isHeadless.js","../../@emailjs/browser/es/errors/headlessError/headlessError.js","../../@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../../@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../../@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../../@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../../@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../../@emailjs/browser/es/errors/limitRateError/limitRateError.js","../../@emailjs/browser/es/methods/send/send.js","../../@emailjs/browser/es/utils/validateForm/validateForm.js","../../@emailjs/browser/es/methods/sendForm/sendForm.js","../../@emailjs/browser/es/index.js"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { store } from '../../store/store';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\n/**\n * EmailJS global SDK config\n * @param {object} options - the EmailJS global SDK config options\n * @param {string} origin - the non-default EmailJS origin\n */\nexport const init = (options, origin = 'https://api.emailjs.com') => {\n    if (!options)\n        return;\n    const opts = buildOptions(options);\n    store.publicKey = opts.publicKey;\n    store.blockHeadless = opts.blockHeadless;\n    store.storageProvider = opts.storageProvider;\n    store.blockList = opts.blockList;\n    store.limitRate = opts.limitRate;\n    store.origin = opts.origin || origin;\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = async (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = store.storageProvider || opts.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.4.1');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n"],"mappings":"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"}